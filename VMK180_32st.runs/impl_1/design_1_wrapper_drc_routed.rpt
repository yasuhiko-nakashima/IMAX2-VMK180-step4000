Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2021.2 (lin64) Build 3367213 Tue Oct 19 02:47:39 MDT 2021
| Date         : Thu Mar 30 14:23:14 2023
| Host         : cad105.naist.jp running 64-bit CentOS Linux release 7.9.2009 (Core)
| Command      : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
| Design       : design_1_wrapper
| Device       : xcvm1802-vsva2197-2MP-e-S
| Speed File   : -2MP
| Design State : Fully Routed
------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 1297
+------------+----------+------------------------------------------------+------------+
| Rule       | Severity | Description                                    | Violations |
+------------+----------+------------------------------------------------+------------+
| AVALXA-272 | Warning  | CLK_DOM_COM_WF                                 | 528        |
| DPBU-4     | Warning  | CLK pin needs to be connected to active signal | 128        |
| DPIP-3     | Warning  | Input pipelining                               | 256        |
| DPOP-5     | Warning  | PREG Output pipelining                         | 128        |
| DPOP-6     | Warning  | MREG Output pipelining                         | 128        |
| PDCN-1569  | Warning  | LUT equation term check                        | 128        |
| RTSTAT-10  | Warning  | No routable loads                              | 1          |
+------------+----------+------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
AVALXA-272#1 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#2 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#3 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#4 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#5 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#6 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#7 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#8 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#9 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#10 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#11 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#12 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#13 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#14 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#15 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#16 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#17 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#18 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#19 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#20 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#21 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#22 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#23 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#24 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#25 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#26 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#27 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#28 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#29 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#30 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#31 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#32 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#33 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#34 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#35 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#36 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#37 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#38 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#39 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#40 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#41 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#42 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#43 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#44 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#45 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#46 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#47 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#48 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#49 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#50 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#51 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#52 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#53 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#54 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#55 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#56 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#57 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#58 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#59 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#60 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#61 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#62 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#63 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#64 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#65 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#66 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#67 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#68 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#69 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#70 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#71 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#72 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#73 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#74 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#75 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#76 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#77 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#78 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#79 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#80 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#81 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#82 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#83 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#84 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#85 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#86 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#87 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#88 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#89 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#90 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#91 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#92 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#93 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#94 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#95 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#96 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#97 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#98 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#99 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#100 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#101 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#102 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#103 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#104 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#105 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#106 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#107 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#108 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#109 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#110 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#111 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#112 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#113 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#114 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#115 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#116 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#117 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#118 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#119 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#120 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#121 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#122 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#123 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#124 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#125 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#126 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#127 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#128 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#129 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#130 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#131 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#132 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#133 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#134 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#135 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#136 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#137 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#138 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#139 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#140 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#141 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#142 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#143 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#144 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#145 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#146 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#147 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#148 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#149 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#150 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#151 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#152 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#153 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#154 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#155 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#156 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#157 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#158 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#159 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#160 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#161 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#162 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#163 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#164 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#165 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#166 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#167 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#168 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#169 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#170 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#171 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#172 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#173 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#174 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#175 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#176 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#177 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#178 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#179 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#180 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#181 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#182 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#183 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#184 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#185 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#186 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#187 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#188 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#189 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#190 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#191 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#192 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#193 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#194 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#195 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#196 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#197 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#198 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#199 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#200 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#201 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#202 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#203 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#204 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#205 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#206 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#207 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#208 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#209 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#210 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#211 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#212 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#213 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#214 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#215 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#216 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#217 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#218 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#219 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#220 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#221 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#222 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#223 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#224 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#225 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#226 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#227 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#228 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#229 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#230 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#231 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#232 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#233 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#234 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#235 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#236 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#237 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#238 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#239 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#240 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#241 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#242 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#243 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#244 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#245 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#246 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#247 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#248 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#249 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#250 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#251 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#252 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#253 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#254 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#255 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#256 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#257 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#258 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#259 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#260 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#261 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#262 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#263 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#264 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#265 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#266 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#267 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#268 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#269 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#270 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#271 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#272 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#273 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#274 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#275 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#276 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#277 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#278 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#279 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#280 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#281 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#282 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#283 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#284 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#285 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#286 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#287 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#288 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#289 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#290 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#291 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#292 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#293 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#294 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#295 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#296 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#297 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#298 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#299 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#300 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#301 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#302 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#303 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#304 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#305 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#306 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#307 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#308 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#309 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#310 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#311 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#312 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#313 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#314 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#315 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#316 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#317 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#318 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#319 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#320 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#321 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#322 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#323 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#324 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#325 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#326 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#327 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#328 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#329 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#330 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#331 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#332 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#333 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#334 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#335 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#336 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#337 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#338 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#339 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#340 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#341 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#342 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#343 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#344 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#345 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#346 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#347 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#348 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#349 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#350 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#351 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#352 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#353 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#354 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#355 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#356 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#357 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#358 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#359 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#360 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#361 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#362 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#363 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#364 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#365 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#366 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#367 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#368 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#369 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#370 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#371 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#372 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#373 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#374 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#375 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#376 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#377 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#378 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#379 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#380 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#381 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#382 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#383 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#384 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#385 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#386 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#387 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#388 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#389 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#390 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#391 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#392 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#393 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#394 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#395 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#396 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#397 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#398 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#399 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#400 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#401 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#402 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#403 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#404 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#405 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#406 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#407 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#408 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#409 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#410 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#411 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#412 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#413 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#414 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#415 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#416 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#417 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#418 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#419 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#420 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#421 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#422 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#423 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#424 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#425 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#426 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#427 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#428 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#429 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#430 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#431 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#432 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#433 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#434 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#435 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#436 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#437 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#438 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#439 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#440 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#441 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#442 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#443 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#444 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#445 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#446 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#447 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#448 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#449 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#450 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#451 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#452 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#453 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#454 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#455 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#456 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#457 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#458 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#459 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#460 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#461 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#462 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#463 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#464 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#465 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#466 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#467 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#468 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#469 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#470 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#471 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#472 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#473 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#474 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#475 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#476 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#477 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#478 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#479 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#480 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#481 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#482 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#483 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#484 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#485 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#486 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#487 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#488 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#489 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#490 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#491 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#492 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#493 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#494 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#495 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#496 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#497 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#498 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#499 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#500 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#501 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#502 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#503 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#504 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#505 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#506 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#507 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#508 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#509 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#510 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#511 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#512 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage4_inst/lmm/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#513 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_0: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#514 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_10: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#515 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_11: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#516 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_12: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#517 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_13: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#518 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_14: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#519 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_15: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#520 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_1: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#521 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_2: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#522 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_3: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#523 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_4: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#524 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_5: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#525 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_6: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#526 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_7: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#527 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_8: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVALXA-272#528 Warning
CLK_DOM_COM_WF  
Cell design_1_i/emax6_0/inst/fsm/dmabuf/fpga_bram64/inst/gen_xpm.gen_base.xpm_memory_base_inst/gen_wr_b.gen_byte_narrow.for_mem_cols[1].mem_reg_bram_9: When cell attribute CLOCK_DOMAINS=COMMON, if cell attribute WRITE_MODE_A and WRITE_MODE_B are not READ_FIRST, there may be address collision if the same address appears on both read and write ports resulting in unknown or corrupted data. It is suggested to confirm via unisim simulation with SIM_COLLISION_CHECK != NONE that an address collision never occurs and if so try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. If address collision can be avoided, it is strongly suggested to change this mode to NO_CHANGE for better power characteristics. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

DPBU-4#1 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#2 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#3 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#4 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#5 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#6 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#7 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#8 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#9 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#10 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#11 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#12 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#13 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#14 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#15 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#16 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#17 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#18 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#19 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#20 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#21 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#22 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#23 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#24 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#25 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#26 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#27 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#28 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#29 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#30 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#31 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#32 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#33 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#34 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#35 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#36 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#37 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#38 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#39 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#40 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#41 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#42 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#43 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#44 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#45 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#46 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#47 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#48 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#49 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#50 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#51 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#52 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#53 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#54 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#55 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#56 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#57 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#58 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#59 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#60 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#61 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#62 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#63 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#64 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#65 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#66 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#67 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#68 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#69 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#70 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#71 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#72 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#73 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#74 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#75 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#76 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#77 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#78 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#79 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#80 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#81 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#82 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#83 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#84 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#85 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#86 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#87 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#88 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#89 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#90 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#91 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#92 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#93 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#94 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#95 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#96 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#97 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#98 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#99 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#100 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#101 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#102 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#103 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#104 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#105 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#106 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#107 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#108 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#109 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#110 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#111 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#112 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#113 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#114 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#115 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#116 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#117 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#118 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#119 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#120 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#121 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#122 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#123 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#124 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#125 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#126 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#127 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s/CLK should be connected to active signal.
Related violations: <none>

DPBU-4#128 Warning
CLK pin needs to be connected to active signal  
Invalid connection used for DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0, CLK pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0/CLK should be connected to active signal.
Related violations: <none>

DPIP-3#1 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#2 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#3 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#4 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#5 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#6 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#7 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#8 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#9 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#10 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#11 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#12 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#13 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#14 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#15 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#16 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#17 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#18 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#19 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#20 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#21 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#22 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#23 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#24 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#25 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#26 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#27 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#28 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#29 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#30 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#31 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#32 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#33 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#34 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#35 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#36 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#37 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#38 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#39 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#40 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#41 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#42 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#43 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#44 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#45 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#46 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#47 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#48 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#49 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#50 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#51 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#52 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#53 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#54 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#55 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#56 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#57 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#58 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#59 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#60 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#61 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#62 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#63 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#64 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#65 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#66 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#67 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#68 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#69 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#70 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#71 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#72 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#73 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#74 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#75 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#76 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#77 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#78 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#79 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#80 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#81 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#82 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#83 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#84 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#85 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#86 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#87 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#88 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#89 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#90 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#91 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#92 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#93 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#94 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#95 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#96 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#97 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#98 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#99 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#100 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#101 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#102 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#103 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#104 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#105 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#106 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#107 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#108 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#109 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#110 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#111 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#112 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#113 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#114 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#115 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#116 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#117 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#118 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#119 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#120 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#121 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#122 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#123 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#124 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#125 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#126 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#127 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#128 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#129 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#130 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#131 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#132 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#133 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#134 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#135 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#136 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#137 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#138 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#139 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#140 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#141 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#142 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#143 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#144 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#145 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#146 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#147 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#148 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#149 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#150 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#151 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#152 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#153 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#154 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#155 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#156 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#157 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#158 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#159 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#160 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#161 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#162 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#163 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#164 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#165 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#166 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#167 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#168 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#169 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#170 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#171 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#172 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#173 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#174 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#175 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#176 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#177 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#178 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#179 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#180 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#181 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#182 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#183 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#184 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#185 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#186 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#187 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#188 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#189 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#190 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#191 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#192 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#193 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#194 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#195 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#196 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#197 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#198 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#199 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#200 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#201 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#202 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#203 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#204 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#205 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#206 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#207 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#208 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#209 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#210 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#211 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#212 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#213 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#214 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#215 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#216 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#217 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#218 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#219 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#220 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#221 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#222 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#223 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#224 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#225 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#226 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#227 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#228 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#229 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#230 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#231 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#232 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#233 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#234 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#235 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#236 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#237 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#238 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#239 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#240 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#241 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#242 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#243 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#244 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#245 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#246 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#247 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#248 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#249 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#250 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#251 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#252 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#253 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#254 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#255 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0/A[33:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-3#256 Warning
Input pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0 input design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0/B[23:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-5#1 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#2 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#3 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#4 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#5 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#6 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#7 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#8 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#9 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#10 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#11 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#12 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#13 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#14 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#15 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#16 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#17 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#18 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#19 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#20 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#21 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#22 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#23 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#24 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#25 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#26 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#27 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#28 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#29 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#30 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#31 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#32 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#33 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#34 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#35 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#36 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#37 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#38 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#39 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#40 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#41 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#42 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#43 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#44 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#45 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#46 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#47 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#48 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#49 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#50 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#51 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#52 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#53 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#54 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#55 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#56 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#57 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#58 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#59 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#60 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#61 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#62 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#63 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#64 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#65 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#66 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#67 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#68 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#69 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#70 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#71 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#72 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#73 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#74 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#75 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#76 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#77 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#78 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#79 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#80 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#81 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#82 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#83 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#84 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#85 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#86 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#87 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#88 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#89 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#90 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#91 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#92 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#93 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#94 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#95 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#96 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#97 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#98 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#99 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#100 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#101 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#102 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#103 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#104 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#105 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#106 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#107 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#108 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#109 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#110 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#111 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#112 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#113 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#114 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#115 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#116 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#117 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#118 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#119 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#120 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#121 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#122 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#123 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#124 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#125 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s output design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#126 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#127 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s output design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-5#128 Warning
PREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0 output design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-6#1 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#2 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#3 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#4 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#5 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#6 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#7 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#8 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#9 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#10 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#11 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#12 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#13 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#14 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#15 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#16 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#17 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#18 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#19 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#20 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#21 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#22 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#23 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#24 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#25 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#26 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#27 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#28 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#29 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#30 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#31 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#32 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#33 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#34 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#35 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#36 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#37 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#38 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#39 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#40 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#41 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#42 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#43 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#44 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#45 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#46 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#47 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#48 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#49 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#50 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#51 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#52 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#53 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#54 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#55 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#56 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#57 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#58 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#59 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#60 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#61 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#62 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#63 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#64 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#65 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#66 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#67 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#68 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#69 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#70 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#71 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#72 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#73 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#74 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#75 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#76 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#77 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#78 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#79 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#80 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#81 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#82 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#83 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#84 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#85 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#86 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#87 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#88 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#89 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#90 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#91 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#92 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#93 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#94 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#95 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#96 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#97 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#98 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#99 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#100 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#101 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#102 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#103 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#104 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#105 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#106 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#107 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#108 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#109 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#110 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#111 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#112 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#113 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#114 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#115 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#116 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#117 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#118 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#119 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#120 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#121 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#122 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#123 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#124 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#125 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#126 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1h/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#127 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-6#128 Warning
MREG Output pipelining  
DSP design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0 multiplier stage design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/exe1l/s__0/P[57:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

PDCN-1569#1 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A2*(~A5))+(A4*A3*(~A2)*A5)+(A4*(~A3)*A2*A5)+(A4*(~A3)*(~A2)*(~A5))+((~A4)*A3*A2*A5)+((~A4)*A3*(~A2)*(~A5))+((~A4)*(~A3)*A2*(~A5))+((~A4)*(~A3)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#2 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A2*A5)+(A4*(~A3)*(~A2)*A5)+((~A4)*A3*(~A2)*A5)+((~A4)*(~A3)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#3 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A2*A3*(~A5))+(A4*A2*(~A3)*A5)+(A4*(~A2)*A3*A5)+(A4*(~A2)*(~A3)*(~A5))+((~A4)*A2*A3*A5)+((~A4)*A2*(~A3)*(~A5))+((~A4)*(~A2)*A3*(~A5))+((~A4)*(~A2)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#4 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__12/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A2*A3*A5)+(A4*(~A2)*(~A3)*A5)+((~A4)*A2*(~A3)*A5)+((~A4)*(~A2)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#5 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A2*A3*(~A5))+(A4*A2*(~A3)*A5)+(A4*(~A2)*A3*A5)+(A4*(~A2)*(~A3)*(~A5))+((~A4)*A2*A3*A5)+((~A4)*A2*(~A3)*(~A5))+((~A4)*(~A2)*A3*(~A5))+((~A4)*(~A2)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#6 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__14/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A2*A3*A5)+(A4*(~A2)*(~A3)*A5)+((~A4)*A2*(~A3)*A5)+((~A4)*(~A2)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#7 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A4*A3*(~A5))+(A2*A4*(~A3)*A5)+(A2*(~A4)*A3*A5)+(A2*(~A4)*(~A3)*(~A5))+((~A2)*A4*A3*A5)+((~A2)*A4*(~A3)*(~A5))+((~A2)*(~A4)*A3*(~A5))+((~A2)*(~A4)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#8 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__15/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A4*A3*A5)+(A2*(~A4)*(~A3)*A5)+((~A2)*A4*(~A3)*A5)+((~A2)*(~A4)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#9 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A4*A2*(~A5))+(A3*A4*(~A2)*A5)+(A3*(~A4)*A2*A5)+(A3*(~A4)*(~A2)*(~A5))+((~A3)*A4*A2*A5)+((~A3)*A4*(~A2)*(~A5))+((~A3)*(~A4)*A2*(~A5))+((~A3)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#10 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__16/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A4*A2*A5)+(A3*(~A4)*(~A2)*A5)+((~A3)*A4*(~A2)*A5)+((~A3)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#11 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A2*A3*(~A5))+(A4*A2*(~A3)*A5)+(A4*(~A2)*A3*A5)+(A4*(~A2)*(~A3)*(~A5))+((~A4)*A2*A3*A5)+((~A4)*A2*(~A3)*(~A5))+((~A4)*(~A2)*A3*(~A5))+((~A4)*(~A2)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#12 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[17].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__16/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A2*A3*A5)+(A4*(~A2)*(~A3)*A5)+((~A4)*A2*(~A3)*A5)+((~A4)*(~A2)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#13 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A4*A2*(~A5))+(A3*A4*(~A2)*A5)+(A3*(~A4)*A2*A5)+(A3*(~A4)*(~A2)*(~A5))+((~A3)*A4*A2*A5)+((~A3)*A4*(~A2)*(~A5))+((~A3)*(~A4)*A2*(~A5))+((~A3)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#14 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__18/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A4*A2*A5)+(A3*(~A4)*(~A2)*A5)+((~A3)*A4*(~A2)*A5)+((~A3)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#15 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A4*(~A5))+(A2*A3*(~A4)*A5)+(A2*(~A3)*A4*A5)+(A2*(~A3)*(~A4)*(~A5))+((~A2)*A3*A4*A5)+((~A2)*A3*(~A4)*(~A5))+((~A2)*(~A3)*A4*(~A5))+((~A2)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#16 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[19].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__18/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A4*A5)+(A2*(~A3)*(~A4)*A5)+((~A2)*A3*(~A4)*A5)+((~A2)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#17 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A4*A3*(~A5))+(A2*A4*(~A3)*A5)+(A2*(~A4)*A3*A5)+(A2*(~A4)*(~A3)*(~A5))+((~A2)*A4*A3*A5)+((~A2)*A4*(~A3)*(~A5))+((~A2)*(~A4)*A3*(~A5))+((~A2)*(~A4)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#18 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__19/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A4*A3*A5)+(A2*(~A4)*(~A3)*A5)+((~A2)*A4*(~A3)*A5)+((~A2)*(~A4)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#19 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A4*A2*(~A5))+(A3*A4*(~A2)*A5)+(A3*(~A4)*A2*A5)+(A3*(~A4)*(~A2)*(~A5))+((~A3)*A4*A2*A5)+((~A3)*A4*(~A2)*(~A5))+((~A3)*(~A4)*A2*(~A5))+((~A3)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#20 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__21/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A4*A2*A5)+(A3*(~A4)*(~A2)*A5)+((~A3)*A4*(~A2)*A5)+((~A3)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#21 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A2*(~A5))+(A4*A3*(~A2)*A5)+(A4*(~A3)*A2*A5)+(A4*(~A3)*(~A2)*(~A5))+((~A4)*A3*A2*A5)+((~A4)*A3*(~A2)*(~A5))+((~A4)*(~A3)*A2*(~A5))+((~A4)*(~A3)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#22 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__23/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A2*A5)+(A4*(~A3)*(~A2)*A5)+((~A4)*A3*(~A2)*A5)+((~A4)*(~A3)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#23 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A4*A2*(~A5))+(A3*A4*(~A2)*A5)+(A3*(~A4)*A2*A5)+(A3*(~A4)*(~A2)*(~A5))+((~A3)*A4*A2*A5)+((~A3)*A4*(~A2)*(~A5))+((~A3)*(~A4)*A2*(~A5))+((~A3)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#24 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__25/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A4*A2*A5)+(A3*(~A4)*(~A2)*A5)+((~A3)*A4*(~A2)*A5)+((~A3)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#25 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A2*(~A5))+(A4*A3*(~A2)*A5)+(A4*(~A3)*A2*A5)+(A4*(~A3)*(~A2)*(~A5))+((~A4)*A3*A2*A5)+((~A4)*A3*(~A2)*(~A5))+((~A4)*(~A3)*A2*(~A5))+((~A4)*(~A3)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#26 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__26/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A2*A5)+(A4*(~A3)*(~A2)*A5)+((~A4)*A3*(~A2)*A5)+((~A4)*(~A3)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#27 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A2*(~A5))+(A4*A3*(~A2)*A5)+(A4*(~A3)*A2*A5)+(A4*(~A3)*(~A2)*(~A5))+((~A4)*A3*A2*A5)+((~A4)*A3*(~A2)*(~A5))+((~A4)*(~A3)*A2*(~A5))+((~A4)*(~A3)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#28 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__27/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A2*A5)+(A4*(~A3)*(~A2)*A5)+((~A4)*A3*(~A2)*A5)+((~A4)*(~A3)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#29 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A2*A4*(~A5))+(A3*A2*(~A4)*A5)+(A3*(~A2)*A4*A5)+(A3*(~A2)*(~A4)*(~A5))+((~A3)*A2*A4*A5)+((~A3)*A2*(~A4)*(~A5))+((~A3)*(~A2)*A4*(~A5))+((~A3)*(~A2)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#30 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__1/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A2*A4*A5)+(A3*(~A2)*(~A4)*A5)+((~A3)*A2*(~A4)*A5)+((~A3)*(~A2)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#31 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A4*(~A5))+(A2*A3*(~A4)*A5)+(A2*(~A3)*A4*A5)+(A2*(~A3)*(~A4)*(~A5))+((~A2)*A3*A4*A5)+((~A2)*A3*(~A4)*(~A5))+((~A2)*(~A3)*A4*(~A5))+((~A2)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#32 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__1/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A4*A5)+(A2*(~A3)*(~A4)*A5)+((~A2)*A3*(~A4)*A5)+((~A2)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#33 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A4*(~A5))+(A2*A3*(~A4)*A5)+(A2*(~A3)*A4*A5)+(A2*(~A3)*(~A4)*(~A5))+((~A2)*A3*A4*A5)+((~A2)*A3*(~A4)*(~A5))+((~A2)*(~A3)*A4*(~A5))+((~A2)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#34 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__30/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A4*A5)+(A2*(~A3)*(~A4)*A5)+((~A2)*A3*(~A4)*A5)+((~A2)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#35 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A4*(~A5))+(A2*A3*(~A4)*A5)+(A2*(~A3)*A4*A5)+(A2*(~A3)*(~A4)*(~A5))+((~A2)*A3*A4*A5)+((~A2)*A3*(~A4)*(~A5))+((~A2)*(~A3)*A4*(~A5))+((~A2)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#36 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__2/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A4*A5)+(A2*(~A3)*(~A4)*A5)+((~A2)*A3*(~A4)*A5)+((~A2)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#37 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A4*A2*(~A5))+(A3*A4*(~A2)*A5)+(A3*(~A4)*A2*A5)+(A3*(~A4)*(~A2)*(~A5))+((~A3)*A4*A2*A5)+((~A3)*A4*(~A2)*(~A5))+((~A3)*(~A4)*A2*(~A5))+((~A3)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#38 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__6/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A4*A2*A5)+(A3*(~A4)*(~A2)*A5)+((~A3)*A4*(~A2)*A5)+((~A3)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#39 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A2*A4*(~A5))+(A3*A2*(~A4)*A5)+(A3*(~A2)*A4*A5)+(A3*(~A2)*(~A4)*(~A5))+((~A3)*A2*A4*A5)+((~A3)*A2*(~A4)*(~A5))+((~A3)*(~A2)*A4*(~A5))+((~A3)*(~A2)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#40 Warning
LUT equation term check  
Used physical LUT pin 'A1' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__7/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A2*A4*A5)+(A3*(~A2)*(~A4)*A5)+((~A3)*A2*(~A4)*A5)+((~A3)*(~A2)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#41 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A1*A4*(~A5))+(A3*A1*(~A4)*A5)+(A3*(~A1)*A4*A5)+(A3*(~A1)*(~A4)*(~A5))+((~A3)*A1*A4*A5)+((~A3)*A1*(~A4)*(~A5))+((~A3)*(~A1)*A4*(~A5))+((~A3)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#42 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__10/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A1*A4*A5)+(A3*(~A1)*(~A4)*A5)+((~A3)*A1*(~A4)*A5)+((~A3)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#43 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A3*(~A5))+(A4*A1*(~A3)*A5)+(A4*(~A1)*A3*A5)+(A4*(~A1)*(~A3)*(~A5))+((~A4)*A1*A3*A5)+((~A4)*A1*(~A3)*(~A5))+((~A4)*(~A1)*A3*(~A5))+((~A4)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#44 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__11/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A3*A5)+(A4*(~A1)*(~A3)*A5)+((~A4)*A1*(~A3)*A5)+((~A4)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#45 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A4*A3*(~A5))+(A1*A4*(~A3)*A5)+(A1*(~A4)*A3*A5)+(A1*(~A4)*(~A3)*(~A5))+((~A1)*A4*A3*A5)+((~A1)*A4*(~A3)*(~A5))+((~A1)*(~A4)*A3*(~A5))+((~A1)*(~A4)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#46 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__13/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A4*A3*A5)+(A1*(~A4)*(~A3)*A5)+((~A1)*A4*(~A3)*A5)+((~A1)*(~A4)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#47 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A3*A4*(~A5))+(A1*A3*(~A4)*A5)+(A1*(~A3)*A4*A5)+(A1*(~A3)*(~A4)*(~A5))+((~A1)*A3*A4*A5)+((~A1)*A3*(~A4)*(~A5))+((~A1)*(~A3)*A4*(~A5))+((~A1)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#48 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[14].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__13/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A3*A4*A5)+(A1*(~A3)*(~A4)*A5)+((~A1)*A3*(~A4)*A5)+((~A1)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#49 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A3*A4*(~A5))+(A1*A3*(~A4)*A5)+(A1*(~A3)*A4*A5)+(A1*(~A3)*(~A4)*(~A5))+((~A1)*A3*A4*A5)+((~A1)*A3*(~A4)*(~A5))+((~A1)*(~A3)*A4*(~A5))+((~A1)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#50 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__17/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A3*A4*A5)+(A1*(~A3)*(~A4)*A5)+((~A1)*A3*(~A4)*A5)+((~A1)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#51 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A1*(~A5))+(A4*A3*(~A1)*A5)+(A4*(~A3)*A1*A5)+(A4*(~A3)*(~A1)*(~A5))+((~A4)*A3*A1*A5)+((~A4)*A3*(~A1)*(~A5))+((~A4)*(~A3)*A1*(~A5))+((~A4)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#52 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__0/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A1*A5)+(A4*(~A3)*(~A1)*A5)+((~A4)*A3*(~A1)*A5)+((~A4)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#53 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A3*A4*(~A5))+(A1*A3*(~A4)*A5)+(A1*(~A3)*A4*A5)+(A1*(~A3)*(~A4)*(~A5))+((~A1)*A3*A4*A5)+((~A1)*A3*(~A4)*(~A5))+((~A1)*(~A3)*A4*(~A5))+((~A1)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#54 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[1].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__0/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A3*A4*A5)+(A1*(~A3)*(~A4)*A5)+((~A1)*A3*(~A4)*A5)+((~A1)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#55 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A1*(~A5))+(A4*A3*(~A1)*A5)+(A4*(~A3)*A1*A5)+(A4*(~A3)*(~A1)*(~A5))+((~A4)*A3*A1*A5)+((~A4)*A3*(~A1)*(~A5))+((~A4)*(~A3)*A1*(~A5))+((~A4)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#56 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[20].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__19/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A1*A5)+(A4*(~A3)*(~A1)*A5)+((~A4)*A3*(~A1)*A5)+((~A4)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#57 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A3*(~A5))+(A4*A1*(~A3)*A5)+(A4*(~A1)*A3*A5)+(A4*(~A1)*(~A3)*(~A5))+((~A4)*A1*A3*A5)+((~A4)*A1*(~A3)*(~A5))+((~A4)*(~A1)*A3*(~A5))+((~A4)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#58 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[22].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__21/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A3*A5)+(A4*(~A1)*(~A3)*A5)+((~A4)*A1*(~A3)*A5)+((~A4)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#59 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A1*A4*(~A5))+(A3*A1*(~A4)*A5)+(A3*(~A1)*A4*A5)+(A3*(~A1)*(~A4)*(~A5))+((~A3)*A1*A4*A5)+((~A3)*A1*(~A4)*(~A5))+((~A3)*(~A1)*A4*(~A5))+((~A3)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#60 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[27].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__26/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A1*A4*A5)+(A3*(~A1)*(~A4)*A5)+((~A3)*A1*(~A4)*A5)+((~A3)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#61 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A1*A4*(~A5))+(A3*A1*(~A4)*A5)+(A3*(~A1)*A4*A5)+(A3*(~A1)*(~A4)*(~A5))+((~A3)*A1*A4*A5)+((~A3)*A1*(~A4)*(~A5))+((~A3)*(~A1)*A4*(~A5))+((~A3)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#62 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[28].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__27/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A1*A4*A5)+(A3*(~A1)*(~A4)*A5)+((~A3)*A1*(~A4)*A5)+((~A3)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#63 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A3*(~A5))+(A4*A1*(~A3)*A5)+(A4*(~A1)*A3*A5)+(A4*(~A1)*(~A3)*(~A5))+((~A4)*A1*A3*A5)+((~A4)*A1*(~A3)*(~A5))+((~A4)*(~A1)*A3*(~A5))+((~A4)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#64 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__28/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A3*A5)+(A4*(~A1)*(~A3)*A5)+((~A4)*A1*(~A3)*A5)+((~A4)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#65 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A3*A4*(~A5))+(A1*A3*(~A4)*A5)+(A1*(~A3)*A4*A5)+(A1*(~A3)*(~A4)*(~A5))+((~A1)*A3*A4*A5)+((~A1)*A3*(~A4)*(~A5))+((~A1)*(~A3)*A4*(~A5))+((~A1)*(~A3)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#66 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__30/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A3*A4*A5)+(A1*(~A3)*(~A4)*A5)+((~A1)*A3*(~A4)*A5)+((~A1)*(~A3)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#67 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A4*A3*(~A5))+(A1*A4*(~A3)*A5)+(A1*(~A4)*A3*A5)+(A1*(~A4)*(~A3)*(~A5))+((~A1)*A4*A3*A5)+((~A1)*A4*(~A3)*(~A5))+((~A1)*(~A4)*A3*(~A5))+((~A1)*(~A4)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#68 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__3/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A4*A3*A5)+(A1*(~A4)*(~A3)*A5)+((~A1)*A4*(~A3)*A5)+((~A1)*(~A4)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#69 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A3*A1*(~A5))+(A4*A3*(~A1)*A5)+(A4*(~A3)*A1*A5)+(A4*(~A3)*(~A1)*(~A5))+((~A4)*A3*A1*A5)+((~A4)*A3*(~A1)*(~A5))+((~A4)*(~A3)*A1*(~A5))+((~A4)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#70 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__4/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A3*A1*A5)+(A4*(~A3)*(~A1)*A5)+((~A4)*A3*(~A1)*A5)+((~A4)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#71 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A4*A3*(~A5))+(A1*A4*(~A3)*A5)+(A1*(~A4)*A3*A5)+(A1*(~A4)*(~A3)*(~A5))+((~A1)*A4*A3*A5)+((~A1)*A4*(~A3)*(~A5))+((~A1)*(~A4)*A3*(~A5))+((~A1)*(~A4)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#72 Warning
LUT equation term check  
Used physical LUT pin 'A2' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__6/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A4*A3*A5)+(A1*(~A4)*(~A3)*A5)+((~A1)*A4*(~A3)*A5)+((~A1)*(~A4)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#73 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A2*A1*(~A5))+(A4*A2*(~A1)*A5)+(A4*(~A2)*A1*A5)+(A4*(~A2)*(~A1)*(~A5))+((~A4)*A2*A1*A5)+((~A4)*A2*(~A1)*(~A5))+((~A4)*(~A2)*A1*(~A5))+((~A4)*(~A2)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#74 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[0].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A2*A1*A5)+(A4*(~A2)*(~A1)*A5)+((~A4)*A2*(~A1)*A5)+((~A4)*(~A2)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#75 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A4*A2*(~A5))+(A1*A4*(~A2)*A5)+(A1*(~A4)*A2*A5)+(A1*(~A4)*(~A2)*(~A5))+((~A1)*A4*A2*A5)+((~A1)*A4*(~A2)*(~A5))+((~A1)*(~A4)*A2*(~A5))+((~A1)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#76 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__9/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A4*A2*A5)+(A1*(~A4)*(~A2)*A5)+((~A1)*A4*(~A2)*A5)+((~A1)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#77 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A4*(~A5))+(A2*A1*(~A4)*A5)+(A2*(~A1)*A4*A5)+(A2*(~A1)*(~A4)*(~A5))+((~A2)*A1*A4*A5)+((~A2)*A1*(~A4)*(~A5))+((~A2)*(~A1)*A4*(~A5))+((~A2)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#78 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[11].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__10/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A4*A5)+(A2*(~A1)*(~A4)*A5)+((~A2)*A1*(~A4)*A5)+((~A2)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#79 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A4*A2*(~A5))+(A1*A4*(~A2)*A5)+(A1*(~A4)*A2*A5)+(A1*(~A4)*(~A2)*(~A5))+((~A1)*A4*A2*A5)+((~A1)*A4*(~A2)*(~A5))+((~A1)*(~A4)*A2*(~A5))+((~A1)*(~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#80 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[12].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__11/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A4*A2*A5)+(A1*(~A4)*(~A2)*A5)+((~A1)*A4*(~A2)*A5)+((~A1)*(~A4)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#81 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A2*(~A5))+(A4*A1*(~A2)*A5)+(A4*(~A1)*A2*A5)+(A4*(~A1)*(~A2)*(~A5))+((~A4)*A1*A2*A5)+((~A4)*A1*(~A2)*(~A5))+((~A4)*(~A1)*A2*(~A5))+((~A4)*(~A1)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#82 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[13].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__12/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A2*A5)+(A4*(~A1)*(~A2)*A5)+((~A4)*A1*(~A2)*A5)+((~A4)*(~A1)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#83 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A2*(~A5))+(A4*A1*(~A2)*A5)+(A4*(~A1)*A2*A5)+(A4*(~A1)*(~A2)*(~A5))+((~A4)*A1*A2*A5)+((~A4)*A1*(~A2)*(~A5))+((~A4)*(~A1)*A2*(~A5))+((~A4)*(~A1)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#84 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[16].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__15/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A2*A5)+(A4*(~A1)*(~A2)*A5)+((~A4)*A1*(~A2)*A5)+((~A4)*(~A1)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#85 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A4*(~A5))+(A2*A1*(~A4)*A5)+(A2*(~A1)*A4*A5)+(A2*(~A1)*(~A4)*(~A5))+((~A2)*A1*A4*A5)+((~A2)*A1*(~A4)*(~A5))+((~A2)*(~A1)*A4*(~A5))+((~A2)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#86 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__20/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A4*A5)+(A2*(~A1)*(~A4)*A5)+((~A2)*A1*(~A4)*A5)+((~A2)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#87 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A4*A1*(~A5))+(A2*A4*(~A1)*A5)+(A2*(~A4)*A1*A5)+(A2*(~A4)*(~A1)*(~A5))+((~A2)*A4*A1*A5)+((~A2)*A4*(~A1)*(~A5))+((~A2)*(~A4)*A1*(~A5))+((~A2)*(~A4)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#88 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__22/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A4*A1*A5)+(A2*(~A4)*(~A1)*A5)+((~A2)*A4*(~A1)*A5)+((~A2)*(~A4)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#89 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A2*(~A5))+(A4*A1*(~A2)*A5)+(A4*(~A1)*A2*A5)+(A4*(~A1)*(~A2)*(~A5))+((~A4)*A1*A2*A5)+((~A4)*A1*(~A2)*(~A5))+((~A4)*(~A1)*A2*(~A5))+((~A4)*(~A1)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#90 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[23].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__22/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A2*A5)+(A4*(~A1)*(~A2)*A5)+((~A4)*A1*(~A2)*A5)+((~A4)*(~A1)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#91 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A4*(~A5))+(A2*A1*(~A4)*A5)+(A2*(~A1)*A4*A5)+(A2*(~A1)*(~A4)*(~A5))+((~A2)*A1*A4*A5)+((~A2)*A1*(~A4)*(~A5))+((~A2)*(~A1)*A4*(~A5))+((~A2)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#92 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__23/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A4*A5)+(A2*(~A1)*(~A4)*A5)+((~A2)*A1*(~A4)*A5)+((~A2)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#93 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A2*A4*(~A5))+(A1*A2*(~A4)*A5)+(A1*(~A2)*A4*A5)+(A1*(~A2)*(~A4)*(~A5))+((~A1)*A2*A4*A5)+((~A1)*A2*(~A4)*(~A5))+((~A1)*(~A2)*A4*(~A5))+((~A1)*(~A2)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#94 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__24/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A2*A4*A5)+(A1*(~A2)*(~A4)*A5)+((~A1)*A2*(~A4)*A5)+((~A1)*(~A2)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#95 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A1*A2*(~A5))+(A4*A1*(~A2)*A5)+(A4*(~A1)*A2*A5)+(A4*(~A1)*(~A2)*(~A5))+((~A4)*A1*A2*A5)+((~A4)*A1*(~A2)*(~A5))+((~A4)*(~A1)*A2*(~A5))+((~A4)*(~A1)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#96 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[26].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__25/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A1*A2*A5)+(A4*(~A1)*(~A2)*A5)+((~A4)*A1*(~A2)*A5)+((~A4)*(~A1)*A2*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#97 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A4*A1*(~A5))+(A2*A4*(~A1)*A5)+(A2*(~A4)*A1*A5)+(A2*(~A4)*(~A1)*(~A5))+((~A2)*A4*A1*A5)+((~A2)*A4*(~A1)*(~A5))+((~A2)*(~A4)*A1*(~A5))+((~A2)*(~A4)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#98 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__29/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A4*A1*A5)+(A2*(~A4)*(~A1)*A5)+((~A2)*A4*(~A1)*A5)+((~A2)*(~A4)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#99 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A2*A4*(~A5))+(A1*A2*(~A4)*A5)+(A1*(~A2)*A4*A5)+(A1*(~A2)*(~A4)*(~A5))+((~A1)*A2*A4*A5)+((~A1)*A2*(~A4)*(~A5))+((~A1)*(~A2)*A4*(~A5))+((~A1)*(~A2)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#100 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__4/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A2*A4*A5)+(A1*(~A2)*(~A4)*A5)+((~A1)*A2*(~A4)*A5)+((~A1)*(~A2)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#101 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A2*A4*(~A5))+(A1*A2*(~A4)*A5)+(A1*(~A2)*A4*A5)+(A1*(~A2)*(~A4)*(~A5))+((~A1)*A2*A4*A5)+((~A1)*A2*(~A4)*(~A5))+((~A1)*(~A2)*A4*(~A5))+((~A1)*(~A2)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#102 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__5/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A2*A4*A5)+(A1*(~A2)*(~A4)*A5)+((~A1)*A2*(~A4)*A5)+((~A1)*(~A2)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#103 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A4*(~A5))+(A2*A1*(~A4)*A5)+(A2*(~A1)*A4*A5)+(A2*(~A1)*(~A4)*(~A5))+((~A2)*A1*A4*A5)+((~A2)*A1*(~A4)*(~A5))+((~A2)*(~A1)*A4*(~A5))+((~A2)*(~A1)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#104 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__8/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A4*A5)+(A2*(~A1)*(~A4)*A5)+((~A2)*A1*(~A4)*A5)+((~A2)*(~A1)*A4*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#105 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A4*A2*A1*(~A5))+(A4*A2*(~A1)*A5)+(A4*(~A2)*A1*A5)+(A4*(~A2)*(~A1)*(~A5))+((~A4)*A2*A1*A5)+((~A4)*A2*(~A1)*(~A5))+((~A4)*(~A2)*A1*(~A5))+((~A4)*(~A2)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#106 Warning
LUT equation term check  
Used physical LUT pin 'A3' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[9].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__8/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A4*A2*A1*A5)+(A4*(~A2)*(~A1)*A5)+((~A4)*A2*(~A1)*A5)+((~A4)*(~A2)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#107 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A1*(~A5))+(A2*A3*(~A1)*A5)+(A2*(~A3)*A1*A5)+(A2*(~A3)*(~A1)*(~A5))+((~A2)*A3*A1*A5)+((~A2)*A3*(~A1)*(~A5))+((~A2)*(~A3)*A1*(~A5))+((~A2)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#108 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[10].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__9/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A1*A5)+(A2*(~A3)*(~A1)*A5)+((~A2)*A3*(~A1)*A5)+((~A2)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#109 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A3*(~A5))+(A2*A1*(~A3)*A5)+(A2*(~A1)*A3*A5)+(A2*(~A1)*(~A3)*(~A5))+((~A2)*A1*A3*A5)+((~A2)*A1*(~A3)*(~A5))+((~A2)*(~A1)*A3*(~A5))+((~A2)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#110 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[15].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__14/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A3*A5)+(A2*(~A1)*(~A3)*A5)+((~A2)*A1*(~A3)*A5)+((~A2)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#111 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A3*(~A5))+(A2*A1*(~A3)*A5)+(A2*(~A1)*A3*A5)+(A2*(~A1)*(~A3)*(~A5))+((~A2)*A1*A3*A5)+((~A2)*A1*(~A3)*(~A5))+((~A2)*(~A1)*A3*(~A5))+((~A2)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#112 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[18].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__17/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A3*A5)+(A2*(~A1)*(~A3)*A5)+((~A2)*A1*(~A3)*A5)+((~A2)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#113 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A2*A1*(~A5))+(A3*A2*(~A1)*A5)+(A3*(~A2)*A1*A5)+(A3*(~A2)*(~A1)*(~A5))+((~A3)*A2*A1*A5)+((~A3)*A2*(~A1)*(~A5))+((~A3)*(~A2)*A1*(~A5))+((~A3)*(~A2)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#114 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[21].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__20/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A2*A1*A5)+(A3*(~A2)*(~A1)*A5)+((~A3)*A2*(~A1)*A5)+((~A3)*(~A2)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#115 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A2*A3*(~A5))+(A1*A2*(~A3)*A5)+(A1*(~A2)*A3*A5)+(A1*(~A2)*(~A3)*(~A5))+((~A1)*A2*A3*A5)+((~A1)*A2*(~A3)*(~A5))+((~A1)*(~A2)*A3*(~A5))+((~A1)*(~A2)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#116 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[25].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__24/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A2*A3*A5)+(A1*(~A2)*(~A3)*A5)+((~A1)*A2*(~A3)*A5)+((~A1)*(~A2)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#117 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A3*A2*A1*(~A5))+(A3*A2*(~A1)*A5)+(A3*(~A2)*A1*A5)+(A3*(~A2)*(~A1)*(~A5))+((~A3)*A2*A1*A5)+((~A3)*A2*(~A1)*(~A5))+((~A3)*(~A2)*A1*(~A5))+((~A3)*(~A2)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#118 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/fpu1h/fadd_s1_exp_r/i___604_i_1__28/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A3*A2*A1*A5)+(A3*(~A2)*(~A1)*A5)+((~A3)*A2*(~A1)*A5)+((~A3)*(~A2)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#119 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A1*(~A5))+(A2*A3*(~A1)*A5)+(A2*(~A3)*A1*A5)+(A2*(~A3)*(~A1)*(~A5))+((~A2)*A3*A1*A5)+((~A2)*A3*(~A1)*(~A5))+((~A2)*(~A3)*A1*(~A5))+((~A2)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#120 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__29/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A1*A5)+(A2*(~A3)*(~A1)*A5)+((~A2)*A3*(~A1)*A5)+((~A2)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#121 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A3*(~A5))+(A2*A1*(~A3)*A5)+(A2*(~A1)*A3*A5)+(A2*(~A1)*(~A3)*(~A5))+((~A2)*A1*A3*A5)+((~A2)*A1*(~A3)*(~A5))+((~A2)*(~A1)*A3*(~A5))+((~A2)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#122 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[3].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__2/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A3*A5)+(A2*(~A1)*(~A3)*A5)+((~A2)*A1*(~A3)*A5)+((~A2)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#123 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A1*A3*(~A5))+(A2*A1*(~A3)*A5)+(A2*(~A1)*A3*A5)+(A2*(~A1)*(~A3)*(~A5))+((~A2)*A1*A3*A5)+((~A2)*A1*(~A3)*(~A5))+((~A2)*(~A1)*A3*(~A5))+((~A2)*(~A1)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#124 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__3/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A1*A3*A5)+(A2*(~A1)*(~A3)*A5)+((~A2)*A1*(~A3)*A5)+((~A2)*(~A1)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#125 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A2*A3*A1*(~A5))+(A2*A3*(~A1)*A5)+(A2*(~A3)*A1*A5)+(A2*(~A3)*(~A1)*(~A5))+((~A2)*A3*A1*A5)+((~A2)*A3*(~A1)*(~A5))+((~A2)*(~A3)*A1*(~A5))+((~A2)*(~A3)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#126 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[6].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__5/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A2*A3*A1*A5)+(A2*(~A3)*(~A1)*A5)+((~A2)*A3*(~A1)*A5)+((~A2)*(~A3)*A1*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#127 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7/LUTCY1_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7/LUTCY1_INST/I0) is not included in the LUT equation: 'O5=(A1*A2*A3*(~A5))+(A1*A2*(~A3)*A5)+(A1*(~A2)*A3*A5)+(A1*(~A2)*(~A3)*(~A5))+((~A1)*A2*A3*A5)+((~A1)*A2*(~A3)*(~A5))+((~A1)*(~A2)*A3*(~A5))+((~A1)*(~A2)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

PDCN-1569#128 Warning
LUT equation term check  
Used physical LUT pin 'A4' of cell design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7/LUTCY2_INST (in design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7 macro) (pin design_1_i/emax6_0/inst/EMAX6_UNIT[8].unit/stage2_inst/fpu1l/fadd_s1_exp_r/i___616_i_1__7/LUTCY2_INST/I0) is not included in the LUT equation: 'O6=(A1*A2*A3*A5)+(A1*(~A2)*(~A3)*A5)+((~A1)*A2*(~A3)*A5)+((~A1)*(~A2)*A3*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
Related violations: <none>

RTSTAT-10#1 Warning
No routable loads  
8 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/emax6_0/inst/EMAX6_UNIT[24].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1,
design_1_i/emax6_0/inst/EMAX6_UNIT[29].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1,
design_1_i/emax6_0/inst/EMAX6_UNIT[2].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1,
design_1_i/emax6_0/inst/EMAX6_UNIT[30].unit/stage2_inst/exe1h/ex2d_r/conf3_reg[1]_0,
design_1_i/emax6_0/inst/EMAX6_UNIT[31].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1,
design_1_i/emax6_0/inst/EMAX6_UNIT[4].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1,
design_1_i/emax6_0/inst/EMAX6_UNIT[5].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1
design_1_i/emax6_0/inst/EMAX6_UNIT[7].unit/stage2_inst/exe1h/ex2d_r/conf1_reg[1]_1.
Related violations: <none>


